{"version":3,"sources":["components/navigation/navigation.js","components/logo/Logo.js","components/imageFormInput/ImageFormInput.js","components/FaceRecognitionImage/FaceRecognitionImage.js","components/Alert/Alert.js","components/SignIn/SignIn.js","components/Register/Register.js","components/UserInfo/UserInfo.js","App.js","serviceWorker.js","index.js"],"names":["navigation","route","onRouteChange","to","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alignItems","src","alt","ImageFormInput","onInputChange","onButtonClicked","onChange","type","FaceRecognitionImage","box","image","id","length","top","right","bottom","left","Alert","data-icon","viewBox","fill","d","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPass","onSubmit","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","data","onLoadUser","onSignInError","catch","err","console","log","this","htmlFor","name","Component","Register","onChangeEmail","onChangePassword","onChangeName","resp","user","UserInfo","entries","Number","initialState","input","signinErr","joined","App","currentUser","enties","res","update","parseInt","setBox","calculateBox","face","outputs","regions","region_info","bounding_box","imageTarget","document","querySelector","left_col","top_row","right_col","bottom_row","signinErrHandler","status","params","particles","number","density","enable","value_area","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.79de8127.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function navigation({route,onRouteChange}) {\r\n    let to = route==='signin'?'register' : 'signin';    \r\n    return (\r\n        <nav style={{ display:'flex', justifyContent:'flex-end' }}>\r\n            <p onClick={()=>onRouteChange(to)} className=\"f3 dim underline link black pointer pr3\">\r\n                {route==='signin'?'Register':(route==='register'?'Sign In' : 'Sign Out')}\r\n            </p>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Tilt from 'react-tilt'\r\nimport './logo.css'\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div>\r\n           <Tilt className=\"Tilt br2 shadow-3 ma3 \" options={{ max : 55 }} style={{ height: 150, width: 150 ,display:'flex',justifyContent:'center',alignItems:'center'}} >\r\n                <div className=\"Tilt-inner\" > <img src=\"https://img.icons8.com/ios/100/000000/brain.png\" alt=\"logo\"/>  </div>\r\n            </Tilt> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './ImageFormInput.css'\r\n\r\nexport default function ImageFormInput({onInputChange,onButtonClicked}) {\r\n    return (\r\n        <div>\r\n            <p className=\"f3\">\r\n                {'This app wil detect every faces in a picture.'}\r\n            </p>\r\n            <div style={{ display:'flex',justifyContent:'center' }}>\r\n                <div className=\"form pa4 shadow-5\"style={{ display:'flex',justifyContent:'center' }}>\r\n                    <input onChange={onInputChange} type=\"text\" className=\"f4 pa2 ma1 center w-70  br3\"/>\r\n                    <button \r\n                    onClick={onButtonClicked} \r\n                    className=\"f4 white br3 bg-light-purple link pointer grow w-auto ma1 ph3 pv2\" > \r\n                    {'Detect'} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './FaceRecognitionImage.css'\r\n\r\nexport default function FaceRecognitionImage({box,image}) {\r\n    const temp = \"https://image.shutterstock.com/image-photo/colorful-flower-on-dark-tropical-260nw-721703848.jpg\"\r\n    return (\r\n        <div className=\"ma\" style={{ display:'flex',justifyContent:'center' }}>\r\n        <div className={'absolute mt2'} style={{ display:'flex',justifyContent:'center' }}>\r\n            <img id=\"imageTarget\" className={image.length ? '' : 'dn'} style={{ width:'500px',height:'auto' }} src={image.length ? image : temp} alt=\"\"/>\r\n            <div className={image.length ? 'bounding-box' : 'dn'} style={{ top:box.top,right:box.right,bottom:box.bottom,left:box.left }}></div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert() {\r\n    return (\r\n        <div>\r\n            <div className=\"flex items-center justify-center pa1 bg-light-red white\">\r\n            <svg className=\"w1\" data-icon=\"info\" viewBox=\"0 0 32 32\" style={{ fill:\"currentcolor\" }}>\r\n                <title>info icon</title>\r\n                <path d=\"M16 0 A16 16 0 0 1 16 32 A16 16 0 0 1 16 0 M19 15 L13 15 L13 26 L19 26 z M16 6 A3 3 0 0 0 16 12 A3 3 0 0 0 16 6\"></path>\r\n            </svg>\r\n            <span className=\"lh-title ml3\">Wrong Credential.</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Alert from '../Alert/Alert'\r\n\r\nexport default class SignIn extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            signInEmail:'',\r\n            signInPass:'',\r\n        }\r\n    }\r\n\r\n    onEmailChange = event => this.setState({signInEmail:event.target.value})\r\n    onPasswordChange = event => this.setState({signInPass:event.target.value})\r\n    onSubmit = event =>{\r\n        fetch('https://frozen-citadel-65423.herokuapp.com/signin',{\r\n            method: 'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                email:this.state.signInEmail,\r\n                password: this.state.signInPass\r\n            })\r\n        }).then(response=>response.json())\r\n        .then(data=>{\r\n            if(data.id){\r\n                this.props.onLoadUser(data);\r\n                this.props.onRouteChange('home');\r\n                this.props.onSignInError(false)\r\n            }else{\r\n                this.props.onSignInError(true)\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"error\",err)\r\n            \r\n        })\r\n        \r\n    }\r\n    render(){\r\n        const {onRouteChange,err}= this.props;\r\n        return (\r\n            <main className=\"pv3 ph5 dib black-80 br3 shadow-5\">\r\n                <div className=\"measure center\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                    {err?<Alert />: ''}\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">Email</label>\r\n                        <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f4\" htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input onClick={this.onSubmit} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f4 dib\" type=\"submit\" value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                    <p onClick={()=>onRouteChange('register')} className=\"f4 link dim underline black db pointer\">Register</p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Register extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            name:'',\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n\r\n    onChangeEmail=event=>this.setState({email:event.target.value})\r\n    onChangePassword=event=>this.setState({password:event.target.value})\r\n    onChangeName=event=>this.setState({name:event.target.value})\r\n\r\n    onSubmit=event=>{\r\n        const {name,email,password} = this.state;\r\n\r\n        fetch('https://frozen-citadel-65423.herokuapp.com/register/',{\r\n            headers : {'Content-Type':'application/json'},\r\n            method  : 'post',\r\n            body    : JSON.stringify({\r\n                name:name,\r\n                email:email,\r\n                password:password\r\n            })\r\n        }).then(resp=>resp.json())\r\n        .then(user=>{\r\n            if(user.id){\r\n                this.props.onLoadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <main className=\"pv3 ph5 dib black-80 br3 shadow-5\">\r\n                <div className=\"measure center\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f4\" htmlFor=\"name\">Name</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"text\" \r\n                            name=\"name\"  \r\n                            id=\"name\"\r\n                            onChange={this.onChangeName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\"  \r\n                            id=\"email-address\"\r\n                            onChange={this.onChangeEmail}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f4\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"password\" \r\n                            name=\"password\"  \r\n                            id=\"password\"\r\n                            onChange={this.onChangePassword}\r\n                        />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                        onClick={this.onSubmit} \r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f4 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Register\" \r\n                    />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function UserInfo({name,entries}) {\r\n    \r\n    return (\r\n        <p className=\"f3 white df center ma5\">\r\n            <span className=\"f2\">{name}</span>{', your current entrie\\'s are...'}\r\n            <span className=\"f2 \"> {Number(entries)} </span>\r\n        </p>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js'\nimport Navigation from './components/navigation/navigation'\nimport Logo from './components/logo/Logo'\nimport ImageFormInput from './components/imageFormInput/ImageFormInput'\nimport FaceRecognitionImage from './components/FaceRecognitionImage/FaceRecognitionImage'\nimport SignIn from './components/SignIn/SignIn'\nimport Register from './components/Register/Register'\nimport UserInfo from './components/UserInfo/UserInfo'\nimport './App.css';\nimport 'tachyons'\n\n\n\nconst initialState={\n    input:'',\n    box:{},\n    route:'signin',\n    signinErr:false,\n    user:{\n      id:0,\n      name:'',\n      email:'=',\n      entries:0,\n      joined: ''\n    }\n}\nclass App extends Component {  \n  constructor(){\n    super()\n    this.state = initialState;\n  }\n\n  onLoadUser=data=>{\n    const currentUser={\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: Number(data.enties),\n      joined: data.joined\n    }\n    this.setState({\n      user: currentUser\n    })\n  }\n\n  onInputChange = event => this.setState({input:event.target.value})\n\n  onButtonClicked = event =>{\n    fetch('https://frozen-citadel-65423.herokuapp.com/imageUrl',{\n        headers : {'Content-Type':'application/json'},\n        method : 'post',\n        body    : JSON.stringify({\n          input:this.state.input\n        }) \n      })\n      .then(response=>response.json())\n      .then(res=> {\n      if(res){\n        fetch('https://frozen-citadel-65423.herokuapp.com/image',{\n          headers : {'Content-Type':'application/json'},\n          method : 'put',\n          body    : JSON.stringify({\n            id:this.state.user.id\n          }) \n        }).then(resp=>resp.json())\n          .then(data=>{\n            const update = this.state.user;\n            update.entries = parseInt(data);\n            this.setState({\n              user:update\n            })\n          })\n      }\n      \n      this.setBox(this.calculateBox(res))\n    })\n    .catch(err=>console.log(err))\n  }\n\n  calculateBox=data=>{\n    const face = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const imageTarget = document.querySelector('#imageTarget');\n    let width = Number(imageTarget.width);\n    let height = Number(imageTarget.height);\n    const left = face.left_col * width;\n    const top = face.top_row * height;\n    const right = width - (face.right_col*width);\n    const bottom = height - (face.bottom_row*height);\n\n    return {left:left,top:top,right:right,bottom:bottom}\n  }\n\n  setBox= data =>this.setState({box:data})\n\n  onRouteChange= route =>{\n      route==='signin'?\n      this.setState(initialState):\n      this.setState({route:route});\n    }\n\n  signinErrHandler= status=>{this.setState({signinErr:status})}\n\n  render(){\n    const {input,box,route,user,signinErr} = this.state;\n    const particlesParam={\n      particles:{\n        number:{\n          value:150,\n          density:{\n            enable:true,\n            value_area:800\n          }\n        }\n      }\n    }\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesParam} />\n        <Navigation \n           route={route}\n           onRouteChange={this.onRouteChange} />\n\n        {route==='signin' \n          ? <SignIn err={signinErr} onSignInError={this.signinErrHandler} onLoadUser={this.onLoadUser} onRouteChange={this.onRouteChange} />\n          : (\n            route==='register'\n            ? <Register onLoadUser={this.onLoadUser} onRouteChange={this.onRouteChange} />\n            : <div>\n              <Logo />\n              <UserInfo name={user.name} entries={user.entries} />\n              <ImageFormInput \n                onInputChange={this.onInputChange}\n                onButtonClicked={this.onButtonClicked}\n                />\n              <FaceRecognitionImage\n                box={box}\n              image={input} />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>,\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}